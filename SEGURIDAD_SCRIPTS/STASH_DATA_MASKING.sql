--DATA MASKING--

--VERIFICAMOS LA EXISTENCIA DE LA BASE DE DATOS--

DROP DATABASE STASH_DATA_MASKING
GO

--CREAMOS LA BASE DE DATOS--

CREATE DATABASE STASH_DATA_MASKING
GO

USE STASH_DATA_MASKING
GO

CREATE TABLE TARJETA (
	ID_TARJETA INT IDENTITY (1,1) PRIMARY KEY,
	NUMERO bigint, 
	CVV bigint ,
	FECHA_CADUCIDAD DATE )
GO

--INSERTAMOS DATOS EN LA TABLA--

INSERT INTO TARJETA (NUMERO, CVV, FECHA_CADUCIDAD) VALUES
	(2514639852148749 , 422 , '2025-06-08'),
	(6987542685743694, 688 , '2026-07-17'),
	(5201487423145896, 356 , '2027-04-30'),
	(5847362871874536, 598, '2026-05-24'),
	(3627145820305897, 102, '2024-02-25')
GO

SELECT * FROM TARJETA
GO

--CREAMOS EL USUARIO CONTABILIDAD, EL CUAL TENDRÁ PERMISO DE SELECT--

DROP USER IF EXISTS CONTABILIDAD
GO

CREATE USER CONTABILIDAD WITHOUT LOGIN
GO

--OTORGAMOS PERMISOS DE SELECT AL USUARIO--

GRANT SELECT ON TARJETA TO CONTABILIDAD
GO

--CONSULTA DEL CATÁLOGO DE VISTAS DEL SISTEMA--
--PARA OBTENER INFORMACION SOBRE LAS COLUMNAS ENMASCARACAS--

SELECT c.name, tbl.name as table_name, c.is_masked, c.masking_function
	FROM sys.masked_columns AS c 
	JOIN sys.tables AS tbl
	ON c.[object_id] = tbl.[object_id]
	WHERE is_masked = 1;
GO

--PARA SIMPLIFICAR LAS SIGUIENTES DEMOSTRACIONES--
--CREAMOS UN PROCEDIMIENTO ALMACENADO, CON LA FINALIDAD DE FACILITAR LAS DEMOSTRACIONES--

CREATE OR ALTER PROCEDURE MASK_STATUS
AS
BEGIN
		SELECT c.name, tbl.name as table_name, c.is_masked, c.masking_function
	FROM sys.masked_columns AS c 
	JOIN sys.tables AS tbl
	ON c.[object_id] = tbl.[object_id]
	WHERE is_masked = 1;
END
GO

--PROBAMOS AL PROCEDIMIENTO ALMACENADO--

EXEC MASK_STATUS
GO

--TIPOS DE DATA MASKING--

-----------------------------------------------------------------------------------------------------------------------------

--FUNCION DEFAULT--

ALTER TABLE TARJETA
	ALTER COLUMN CVV VARCHAR(20) MASKED WITH (FUNCTION = 'default()');
GO

--IMPERSONAMOS AL USUARIO CONTABILIDAD--

EXECUTE AS USER = 'CONTABILIDAD';  
GO

REVERT
GO

--REALIZAMOS LA CONSULTA SOBRE LA TABLA--

SELECT * FROM TARJETA
GO


-----------------------------------------------------------------------------------------------------------------------------

--FUNCTION PARTIAL--

--REALIZAMOS EL ENMASCARAMIENTO DE LOS PRIMEROS 12 DIGITOS DEL CAMPO TARJETA--

ALTER TABLE TARJETA
	ALTER COLUMN [NUMERO] VARCHAR(50) MASKED WITH (FUNCTION = 'partial(0,"XXXXXXXXXXXX",4)')
GO

--IMPERSONAMOS AL USUARIO CONTABILIDAD--

EXECUTE AS USER = 'CONTABILIDAD';  
GO

REVERT
GO

--REALIZAMOS LA CONSULTA SOBRE LA TABLA--

SELECT * FROM TARJETA
GO

-----------------------------------------------------------------------------------------------------------------------------

--FUNCTION RANDOM--

--EN ESTE CASO APLICAMOS EL RANDOM MASK SOBRE EL CAMPO CVV-
--CON LA FINALIDAD DE QUE GENERE 3 DIGITOS ALEATORIOS--
--PARA DICHO CAMPO--

ALTER TABLE TARJETA
ALTER COLUMN CVV int MASKED WITH (FUNCTION = 'random(100, 999)')
GO

--IMPERSONAMOS AL USUARIO CONTABILIDAD--

EXECUTE AS USER = 'CONTABILIDAD';  
GO

REVERT
GO

--REALIZAMOS LA CONSULTA SOBRE LA TABLA--

SELECT * FROM TARJETA
GO

-----------------------------------------------------------------------------------------------------------------------------

--FUNCTION STRING DYNAMIC DATA MASK--

--EN ESTE CASO APLICAMOS EL RANDOM MASK SOBRE EL CAMPO NUMERO-
--CON LA FINALIDAD DE SUSTITUIR LOS PRIMEROS 12 DIGITOS--
--POR EL MENSAJE ACCESO RESTRINGIDO--


ALTER TABLE TARJETA
	ALTER COLUMN [NUMERO] ADD MASKED WITH (FUNCTION = 'partial(0,"ACCESO-RESTRINGIDO-",4)')
GO

--IMPERSONAMOS AL USUARIO CONTABILIDAD--

EXECUTE AS USER = 'CONTABILIDAD';  
GO

REVERT
GO

--REALIZAMOS LA CONSULTA SOBRE LA TABLA--

SELECT * FROM TARJETA
GO

-----------------------------------------------------------------------------------------------------------------------------

--FUNCTION DATE TIME-- DISPONIBLE PARA LA VERSION SQL SERVER 2022 (16.x)

--LO APLICAREMOS AL CAMPO FECHA, MODIFICANDO EL CAMPO AÑO--

--PARA MODIFICAR EL AÑO--
ALTER TABLE TARJETA
ALTER COLUMN FECHA_CADUCIDAD ADD MASKED WITH (FUNCTION = 'datetime("Y")')
GO

--PARA MODIFICAR EL MES--

ALTER TABLE TARJETA
ALTER COLUMN FECHA_CADUCIDAD ADD MASKED WITH (FUNCTION = 'datetime("M")')
GO

--PARA MODIFICAR EL MES--

ALTER TABLE TARJETA
ALTER COLUMN FECHA_CADUCIDAD ADD MASKED WITH (FUNCTION = 'datetime("M")')
GO

--IMPERSONAMOS AL USUARIO CONTABILIDAD--

EXECUTE AS USER = 'CONTABILIDAD';  
GO

REVERT
GO

--REALIZAMOS LA CONSULTA SOBRE LA TABLA--

SELECT * FROM TARJETA
GO

------------------------------------------------------------------------------------------------

--FUNCION UNMASK--

--LA APLICAREMOS SOBRE EL USUARIO CONTABILIDAD--
--CON LA FINALIDAD DE QUE SEA CAPAZ DE VISUALIZAR TODO EL CONTENIDO DE LA TABLA--

GRANT UNMASK TO CONTABILIDAD
GO

--IMPERSONAMOS AL USUARIO CONTABILIDAD--

EXECUTE AS USER = 'CONTABILIDAD';  
GO

PRINT USER

SELECT * FROM TARJETA
GO

--PARA REVOCAR EL PERMISO ANTERIORMENTE CONCEDIDO--

REVOKE UNMASK TO CONTABILIDAD
GO

-----------------------------------------------------------------------------------------------------------

--PERMISOS GRANULARES--

--ESTO NOS PERMITE ASIGNAR EL UNMASK SOBRE UN CAMPO EN CONCRETO--
--Y NO SOBRE LA TABLA EN GENERAL--

--PERMISO SOBRE EL CAMPO NUMERO--

GRANT UNMASK ON TARJETA(NUMERO) TO CONTABILIDAD;

--IMPERSONAMOS AL USUARIO CONTABILIDAD--

EXECUTE AS USER = 'CONTABILIDAD';  
GO

PRINT USER

SELECT * FROM TARJETA
GO

REVOKE UNMASK ON  TO CONTABILIDAD
GO

REVERT
GO

--PERMISO SOBRE EL CAMPO CVV--

GRANT UNMASK ON TARJETA(CVV) TO CONTABILIDAD;

--IMPERSONAMOS AL USUARIO CONTABILIDAD--

EXECUTE AS USER = 'CONTABILIDAD';  
GO

PRINT USER

SELECT * FROM TARJETA
GO

REVOKE UNMASK ON TARJETA(NUMERO) TO CONTABILIDAD
GO