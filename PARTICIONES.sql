USE master 
Go
-- CREAMOS LA BASE DE DATOS CON SUS ARCHIVOS PRINCIPALES MDF Y LDF

DROP DATABASE IF EXISTS STASHMOTOR_PARTICIONES
GO

CREATE DATABASE STASHMOTOR_PARTICIONES
	ON PRIMARY ( NAME = 'STASHMOTOR_AAPL', 
		FILENAME = 'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\PARTICIONES\STASHMOTOR_AAPL.mdf' , 
		SIZE = 15360KB , MAXSIZE = UNLIMITED, FILEGROWTH = 0) 
	LOG ON ( NAME = 'STASHMOTOR_AAPL_log', 
		FILENAME = 'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\PARTICIONES\STASHMOTOR_AAPL.ldf' , 
		SIZE = 10176KB , MAXSIZE = 2048GB , FILEGROWTH = 10%) 
GO

--CREAMOS LOS FILEGROUP QUE CONTENDRAN LAS PARTICIONES--

ALTER DATABASE STASHMOTOR_PARTICIONES ADD FILEGROUP [FG_ventas_enero_marzo] 
GO 
ALTER DATABASE STASHMOTOR_PARTICIONES ADD FILEGROUP [FG_ventas_abril_junio] 
GO 
ALTER DATABASE STASHMOTOR_PARTICIONES ADD FILEGROUP [FG_ventas_julio_septiembre] 
GO 
ALTER DATABASE STASHMOTOR_PARTICIONES ADD FILEGROUP [FG_ventas_octubre_diciembre]
GO

--CREAMOS LOS ARCHIVOS--

ALTER DATABASE STASHMOTOR_PARTICIONES ADD FILE
( NAME = 'ventas_enero_marzo', FILENAME = 
'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\PARTICIONES\ventas_enero_marzo.ndf',
SIZE = 5MB, MAXSIZE = 100MB, FILEGROWTH = 2MB )
TO FILEGROUP [FG_ventas_enero_marzo] 
GO

ALTER DATABASE STASHMOTOR_PARTICIONES ADD FILE
( NAME = 'ventas_abril_junio', FILENAME = 
'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\PARTICIONES\ventas_abril_junio.ndf',
SIZE = 5MB, MAXSIZE = 100MB, FILEGROWTH = 2MB )
TO FILEGROUP [FG_ventas_abril_junio] 
GO

ALTER DATABASE STASHMOTOR_PARTICIONES ADD FILE
( NAME = 'ventas_julio_septiembre', FILENAME = 
'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\PARTICIONES\ventas_julio_septiembre.ndf',
SIZE = 5MB, MAXSIZE = 100MB, FILEGROWTH = 2MB )
TO FILEGROUP [FG_ventas_julio_septiembre] 
GO

ALTER DATABASE STASHMOTOR_PARTICIONES ADD FILE
( NAME = 'ventas_octubre_diciembre', FILENAME = 
'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\PARTICIONES\ventas_octubre_diciembre.ndf',
SIZE = 5MB, MAXSIZE = 100MB, FILEGROWTH = 2MB )
TO FILEGROUP [FG_ventas_octubre_diciembre] 
GO

--CREAMOS UNA FUNCION DE PARTICION LA CUAL ASIGNARÁ LOS LIMITES--

--EN PRINCIPIO DIVIDIREMOS EL AÑO EN TRIMESTRES (PRIMEROS 9 MESES)

--ESTO ESTABLECERÁ TRES RANGOS DE FECHAS:
--(TODO LO QUE ESTE ANTES DEL PRIMERO DE MARZO)
--(TODO LO QUE SE ENCUENTRE ENTRE MARZO Y JUNIO)
--(TODO LO QUE ESTE DESPUES DE JUNIO)

CREATE PARTITION FUNCTION FN_venta_fecha (datetime) 
AS RANGE RIGHT 
	FOR VALUES ('2023-3-1','2023-6-1')
GO

--CREAMOS UN ESQUEMA DE PARTICION QUE ASIGNARA LAS PARTICIONES--
--DE UNA TABLA O INDICE CON PARTICIONES A LOS NUEVOS GRUPOS DE ARCHIVOS--

CREATE PARTITION SCHEME venta_fecha 
AS PARTITION FN_venta_fecha 
	TO (FG_ventas_enero_marzo,FG_ventas_abril_junio,FG_ventas_julio_septiembre,FG_ventas_octubre_diciembre) 
GO

--CREAMOS LA TABLA VENTAS--

DROP TABLE IF EXISTS VENTA
GO

CREATE TABLE VENTA (
	ID_Venta int IDENTITY(1,1) NOT NULL,
	ID_Cliente int,
	Fecha_Venta datetime,
	Total_Venta money,
)
	ON venta_fecha --ESQUEMA DE PARTICION
		(Fecha_Venta) -- COLUMNA DONDE APLICAREMOS LA FUNCION DENTRO DEL ESQUEMA
GO

--INSERCION DE DATOS--

--INGRESAREMOS DATOS Y PODREMOS IR OBSERVANDO COMO VAN SIENDO DISTRIBUIDOS--
--A LAS DISTINTAS PARTICIONES EN FUNCION DE SU FECHA DE VENTA--

INSERT INTO VENTA (ID_Cliente, Fecha_Venta, Total_Venta)
VALUES 
	(1, '2023-01-17 10:00:00', 100.00),
	(2, '2023-02-12 11:00:00', 200.00),
	(3, '2023-02-25 12:00:00', 150.00),
	(4, '2023-02-28 16:00:00', 300.00)
GO

--HACEMOS UN SELECT SOBRE LA TABLA PARA COMPROBAR EN QUE PARTICION SE ENCUENTRAN LOS REGISTROS--

SELECT *,$Partition.FN_venta_fecha(fecha_venta) AS Partition
FROM VENTA
GO

--INSERTAMOS NUEVAS VENTAS--

INSERT INTO VENTA (ID_Cliente, Fecha_Venta, Total_Venta)
VALUES 
	(5, '2023-03-17 11:00:00', 75.00),
	(6, '2023-03-12 15:00:00', 20.00),
	(7, '2023-04-25 09:00:00', 180.00),
	(2, '2023-05-28 10:00:00', 370.00)
GO

INSERT INTO VENTA (ID_Cliente, Fecha_Venta, Total_Venta)
VALUES 
	(8, '2023-06-7 11:00:00', 375.00),
	(9, '2023-06-12 15:00:00', 220.00),
	(10, '2023-07-15 09:00:00', 480.00),
	(11, '2023-08-19 10:00:00', 190.00)
GO

INSERT INTO VENTA (ID_Cliente, Fecha_Venta, Total_Venta)
VALUES 
	(12, '2023-09-09 11:00:00', 575.00),
	(13, '2023-09-13 15:00:00', 1220.00),
	(2, '2023-10-16 09:00:00', 780.00),
	(14, '2023-11-30 10:00:00', 1190.00)
GO

--SPLIT--

ALTER PARTITION FUNCTION FN_venta_fecha() 
	SPLIT RANGE ('2023-09-1'); 
GO

--HACEMOS NUEVAMENTE UN SELECT PARA VERIFICAR LOS CAMBIOS--

SELECT *,$Partition.FN_venta_fecha(fecha_venta) AS Partition
FROM VENTA
GO

--MERGE--

ALTER PARTITION FUNCTION FN_venta_fecha() 
	MERGE RANGE ('2023-3-1'); 
GO

SELECT *,$Partition.FN_venta_fecha(fecha_venta) AS Partition
FROM VENTA
GO

--SWITCH--

CREATE TABLE PRIMER_SEMESTRE (
	ID_Venta int IDENTITY(1,1) NOT NULL,
	ID_Cliente int,
	Fecha_Venta datetime,
	Total_Venta money,
)
ON FG_ventas_enero_marzo
go


ALTER TABLE VENTA 
	SWITCH Partition 1 to PRIMER_SEMESTRE 
go

--HAREMOS UN SELECT DE AMBAS TABLAS PARA VISUALIZAR LOS CAMBIOS--

SELECT * FROM VENTA
GO

SELECT * FROM PRIMER_SEMESTRE
GO

-- TRUNCATE

TRUNCATE TABLE VENTA
	WITH (PARTITIONS (3));
GO

--QUEDARAN UNICAMENTE LOS REGISTROS CORRESPONDIENTES A EL TERCER TRIMESTRE DEL AÑO--

SELECT *,$Partition.FN_venta_fecha(fecha_venta) AS Partition
FROM VENTA
GO
























